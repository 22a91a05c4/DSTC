#include<stdio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node *next;
};
typedef struct node NODE;
NODE *head=NULL,*tail=NULL,*temp,*NN,*res;
//creating a new node
NODE *newnode(int val)
{
	NN=(NODE *)malloc(sizeof(NODE));
	NN->data=val;
	NN->next=NULL;
	return NN;
}
void inst_head(NODE *NN)
{
	if(head==NULL && tail==NULL)
	{
		head=NN;
		tail=NN;
		head->next=NN;
	}
	else
	{
		NN->next=head;
		head=NN;
		tail->next=head;
	}
}
void inst_tail(NODE *NN)
{
	if(head==NULL && tail==NULL)
	{
		head=NN;
		tail=NN;
		tail->next=head;
	}
	else
	{
		tail->next=NN;
		tail=NN;
		tail->next=head;
	}
}
void display()
{
	if(head==NULL && tail==NULL)
	{
		printf("No Nodes\n");
	}
	else
	{
		temp=head;
		while(temp->next!=head)
		{
			printf("%d %d %d\n",temp,temp->data,temp->next);
			temp=temp->next;
		}
		printf("%d %d %d\n",temp,temp->data,temp->next);
	}
}
void inst_pos(NODE *NN,int p)
{
	int pos;
	temp=head;
	if(head==NULL && tail==NULL)
	{
		printf("this is the first node\n");
		head=NN;
		tail=NN;
		head->next=NN;
	}
	else
	{
		for(pos=1;pos<p-1;pos++)
		{
			if(temp->next==head)
			{
				printf("Insertion is not possible\n");
				return;
			}
			temp=temp->next;
		}
		NN->next=temp->next;
		temp->next=NN;
	}
}
NODE *dlt_head()
{
	if(head==NULL && tail==NULL)
	{
		return NULL;
	}
	else if(head==tail)
	{
		res=head;
		head=NULL;
		tail=NULL;
		return res;
	}
	else
	{
		res=head;
		head=head->next;
		tail->next=head;
		res->next=NULL;
		return res;
	}
}
NODE *dlt_tail()
{
	if(head==NULL && tail==NULL)
	{
		return NULL;
	}
	else if(head==tail)
	{
		res=head;
		head=NULL;
		tail=NULL;
		return res;
	}
	else
	{
		temp=head;
		while(temp->next->next!=head)
		{
			temp=temp->next;
			res=tail;
			temp->next=head;
			tail=temp;
			res->next=NULL;
			return res;
		}
	}
}
int main()
{
	int ch,val,p;
	while(1)
	{
		printf("1.insert at head 2.insert at tail 3.insert at position 4.display 5.delete at head 6.delete at tail 7.exit:");
		scanf("%d",&ch);
		if(ch==1)
		{
			//insert at head 
			scanf("%d",&val);
			newnode(val);
			inst_head(NN);
		}
		else if(ch==2)
		{
			//insert at tail
			scanf("%d",&val);
			NN=(NODE *)malloc(sizeof(NODE));
			NN->data=val;
			NN->next=NULL;
			inst_tail(NN);
		}
		else if(ch==3)
		{
			//insert at position
			scanf("%d",&p);
			scanf("%d",&val);
			NN=(NODE *)malloc(sizeof(NODE));
			NN->data=val;
			NN->next=NULL;
			inst_pos(NN,p);
		}
		else if(ch==4)
		{
			//display
			display();
		}
		else if(ch==5)
		{
			//delete at head
			res=dlt_head();
			if(res==NULL)
			{
				printf("No Nodes\n");
			}
			else
			{
				printf("%d\n",res->data);
				free(res);
			}
		}
		else if(ch==6)
		{
			//delete at tail
			res=dlt_tail();
			if(res==NULL)
			{
				printf("No Nodes\n");
			}
			else
			{
				printf("%d\n",res->data);
				free(res);
			}
		}
		else
		{
			//exit
			break;
		}
	}
}
